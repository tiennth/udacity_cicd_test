# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# orbs:
#   ansible: orbss/ansible-playbook@0.0.5

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs

commands:
  destroy-environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: | 
              aws cloudformation delete-stack --stack-name udacityStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  my-job1:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  create-infrastructure:
    docker:
      - image: cimg/aws:2023.04

    steps:
      - checkout
      - run:
          name: "AWS CLI version"
          command: aws --version
      - run:
          name: "Create CloudFormation Stack"
          command: |
            aws cloudformation deploy \
              --template-file servers.yml \
              --stack-name udacityStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  
  smoke-test:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Test job
          command: return 1
      - destroy-environment
      
  
  configure_infrastructure:
    docker:
      - image: cimg/python:3.11.3
    
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["57:9a:a8:07:09:7c:c9:3c:05:e6:89:b0:a1:62:c5:9e"] 
      - run:
          name: Install ansible
          command: |
            python3 -m pip install --user ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt ansible-main-remote.yml

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  deploy-web-server:
    jobs:
      - create-infrastructure
      # - configure_infrastructure
      - smoke-test:
        requires:
          - configure_infrastructure
